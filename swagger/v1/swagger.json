{
  "swagger": "2.0",
  "info": {
    "title": "API Documentation for Rails Starter",
    "version": "v1"
  },
  "paths": {
    "/api/v1/consumers/{id}": {
      "patch": {
        "summary": "Updates a consumer",
        "tags": [
          "Consumers"
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "security": [
          {
            "Bearer": [

            ]
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "consumer",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "first_name": {
                  "type": "string"
                },
                "last_name": {
                  "type": "string"
                }
              },
              "example": {
                "first_name": "Mary"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Consumer updated",
            "schema": {
              "$ref": "#/definitions/consumer"
            },
            "examples": {
              "application/json": {
                "consumer": {
                  "id": 1,
                  "first_name": "Mary",
                  "last_name": "Dietrich"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "examples": {
              "application/json": {
                "error": [
                  "unauthorized"
                ]
              }
            }
          }
        }
      }
    },
    "/api/v1/password_reset": {
      "post": {
        "summary": "Creates password reset",
        "tags": [
          "Password Resets"
        ],
        "description": "\n The password reset endpoint sends an email with a link for users to update their password.                      The password update view is in the API and does not need to be created in the front-end apps.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "security": [
          {
            "Bearer": [

            ]
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "password_reset",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "email": {
                  "type": "string"
                }
              },
              "example": {
                "email": "claudia@example.com"
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Password reset created",
            "examples": {
              "application/json": {
                "password_reset": {
                  "message": "password reset sent"
                }
              }
            }
          },
          "404": {
            "description": "User not found",
            "examples": {
              "application/json": {
                "errors": "Couldn't find User"
              }
            }
          }
        }
      }
    },
    "/api/v1/users/{id}": {
      "get": {
        "summary": "Retrieves a user",
        "tags": [
          "Users"
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "security": [
          {
            "Bearer": [

            ]
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "type": "string",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "User found",
            "schema": {
              "$ref": "#/definitions/user"
            },
            "examples": {
              "application/json": {
                "user": {
                  "id": 15,
                  "email": "markus_rodriguez@example.com",
                  "profile": {
                    "id": 15,
                    "first_name": "Larissa",
                    "last_name": "Hahn"
                  },
                  "profile_type": "Consumer"
                }
              }
            }
          },
          "404": {
            "description": "User not found",
            "examples": {
              "application/json": {
                "errors": "Couldn't find User with 'id'=invalid"
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "examples": {
              "application/json": {
                "error": [
                  "unauthorized"
                ]
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Updates a user",
        "tags": [
          "Users"
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "security": [
          {
            "Bearer": [

            ]
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "user",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "email": {
                  "type": "string"
                },
                "password": {
                  "type": "string"
                },
                "password_confirmation": {
                  "type": "string"
                }
              },
              "example": {
                "email": "newemail@test.com"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "User updated",
            "schema": {
              "$ref": "#/definitions/user"
            },
            "examples": {
              "application/json": {
                "user": {
                  "id": 57,
                  "email": "newemail@test.com",
                  "profile": {
                    "id": 59,
                    "first_name": "Donnell",
                    "last_name": "Bogisich"
                  },
                  "profile_type": "Consumer"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "examples": {
              "application/json": {
                "error": [
                  "unauthorized"
                ]
              }
            }
          }
        }
      }
    },
    "/api/v1/users": {
      "post": {
        "summary": "Creates a user",
        "tags": [
          "Users"
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "user",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "email": {
                  "type": "string"
                },
                "password": {
                  "type": "string"
                },
                "password_confirmation": {
                  "type": "string"
                },
                "profile": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "integer"
                    },
                    "first_name": {
                      "type": "string"
                    },
                    "last_name": {
                      "type": "string"
                    }
                  }
                },
                "profile_type": {
                  "type": "string"
                }
              },
              "example": {
                "email": "scottie@kunzewest.net",
                "password": "123123123",
                "password_confirmation": "123123123",
                "profile_type": "consumer",
                "profile": {
                  "first_name": "Sarita",
                  "last_name": "Blick"
                }
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "User created",
            "schema": {
              "$ref": "#/definitions/user"
            },
            "examples": {
              "application/json": {
                "user": {
                  "id": 27,
                  "email": "scottie@kunzewest.net",
                  "profile": {
                    "id": 27,
                    "first_name": "Sarita",
                    "last_name": "Blick"
                  },
                  "profile_type": "Consumer",
                  "token": "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJleHAiOjE1NjY2NjgyOTMsInN1YiI6Mjd9.zkY4As9Pk6svnIrFkBShipkpuveE1AEuBwite8cTgBQ"
                }
              }
            }
          },
          "400": {
            "description": "Unable to create user",
            "schema": {
              "$ref": "#/definitions/user"
            },
            "examples": {
              "application/json": {
                "errors": {
                  "first_name": [
                    "can't be blank"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/user_token": {
      "post": {
        "summary": "Creates user token",
        "tags": [
          "Logins"
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "auth",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "email": {
                  "type": "string"
                },
                "password": {
                  "type": "string"
                }
              },
              "example": {
                "email": "loise@example.com",
                "password": "password"
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "User token created. User logged in.",
            "examples": {
              "application/json": {
                "user": {
                  "id": 69,
                  "email": "loise@example.com",
                  "profile": {
                    "id": 71,
                    "first_name": "Carroll",
                    "last_name": "Trantow"
                  },
                  "profile_type": "Consumer",
                  "token": "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJleHAiOjE1NjY2NjgyOTUsInN1YiI6Njl9.VUOqMGIAwBSrOsRdY9TOLZKBQRTkFUJDdPhECFaGdtg"
                }
              }
            }
          },
          "404": {
            "description": "User not found"
          }
        }
      }
    }
  },
  "securityDefinitions": {
    "Bearer": {
      "type": "apiKey",
      "name": "Authorization",
      "in": "header"
    }
  },
  "definitions": {
    "user": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer"
        },
        "email": {
          "type": "string"
        },
        "profile_type": {
          "type": "string"
        },
        "profile": {
          "$ref": "#/definitions/consumer"
        }
      }
    },
    "consumer": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer"
        },
        "first_name": {
          "type": "string"
        },
        "last_name": {
          "type": "string"
        }
      }
    }
  }
}